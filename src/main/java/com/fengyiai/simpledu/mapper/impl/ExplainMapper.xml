<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fengyiai.simpledu.mapper.ExplainMapper">
  <resultMap id="BaseResultMap" type="com.fengyiai.simpledu.model.Explain">
    <id column="explain_id" jdbcType="BIGINT" property="explainId" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="good" jdbcType="BIGINT" property="good" />
    <result column="bad" jdbcType="BIGINT" property="bad" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="wiki_id" jdbcType="BIGINT" property="wikiId" />
    <result column="share" jdbcType="BIGINT" property="share" />
    <result column="collect" jdbcType="BIGINT" property="collect" />
    <result column="review" jdbcType="BIGINT" property="review" />
  </resultMap>
  <sql id="Base_Column_List">
    explain_id, creater_id, content, good, bad, gmt_create, gmt_modified, is_delete, 
    wiki_id, share, collect, review
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from explain
    where explain_id = #{explainId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from explain
    where explain_id = #{explainId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fengyiai.simpledu.model.Explain">
    insert into explain (explain_id, creater_id, content, 
      good, bad, gmt_create, 
      gmt_modified, is_delete, wiki_id, 
      share, collect, review
      )
    values (#{explainId,jdbcType=BIGINT}, #{createrId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{good,jdbcType=BIGINT}, #{bad,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT}, #{wikiId,jdbcType=BIGINT}, 
      #{share,jdbcType=BIGINT}, #{collect,jdbcType=BIGINT}, #{review,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fengyiai.simpledu.model.Explain">
    insert into explain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="explainId != null">
        explain_id,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="good != null">
        good,
      </if>
      <if test="bad != null">
        bad,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="wikiId != null">
        wiki_id,
      </if>
      <if test="share != null">
        share,
      </if>
      <if test="collect != null">
        collect,
      </if>
      <if test="review != null">
        review,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="explainId != null">
        #{explainId,jdbcType=BIGINT},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="good != null">
        #{good,jdbcType=BIGINT},
      </if>
      <if test="bad != null">
        #{bad,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="wikiId != null">
        #{wikiId,jdbcType=BIGINT},
      </if>
      <if test="share != null">
        #{share,jdbcType=BIGINT},
      </if>
      <if test="collect != null">
        #{collect,jdbcType=BIGINT},
      </if>
      <if test="review != null">
        #{review,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fengyiai.simpledu.model.Explain">
    update explain
    <set>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="good != null">
        good = #{good,jdbcType=BIGINT},
      </if>
      <if test="bad != null">
        bad = #{bad,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="wikiId != null">
        wiki_id = #{wikiId,jdbcType=BIGINT},
      </if>
      <if test="share != null">
        share = #{share,jdbcType=BIGINT},
      </if>
      <if test="collect != null">
        collect = #{collect,jdbcType=BIGINT},
      </if>
      <if test="review != null">
        review = #{review,jdbcType=BIGINT},
      </if>
    </set>
    where explain_id = #{explainId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fengyiai.simpledu.model.Explain">
    update explain
    set creater_id = #{createrId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      good = #{good,jdbcType=BIGINT},
      bad = #{bad,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIT},
      wiki_id = #{wikiId,jdbcType=BIGINT},
      share = #{share,jdbcType=BIGINT},
      collect = #{collect,jdbcType=BIGINT},
      review = #{review,jdbcType=BIGINT}
    where explain_id = #{explainId,jdbcType=BIGINT}
  </update>
  <select id="selectByWikiId" parameterType="Map" resultMap="BaseResultMap">
    select
    e.*,
    u.name as username
    from explain e
    left join userinfo u
    on e.creater_id = u.user_id
    where e.wiki_id = #{wikiId,jdbcType=BIGINT}
    limit #{limit}
    offset #{offset}
  </select>
</mapper>